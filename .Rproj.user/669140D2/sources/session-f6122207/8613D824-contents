
# title: "Lesson 3: Workflow and Statisical Test in R"
# author: "Jocelyn Tijerina" 
# date: "2025-07-17"

#Load packages
library(arrow) # reading in parquet files
library(tidyverse) # for data manipulation and visualization

# load data set
merged_data <- read_parquet(file = "merged_data.parquet", stringsAsFactors = TRUE)

# box plot vizualization
boxplot(formula = upward_mobility_rate_2010 ~ STATE_NAME_2010SVI, data = merged_data)

# remove anomalies
merged_data <- merged_data[!(merged_data$STATE_NAME_2010SVI %in% "06"),]

# re-plot boxplot to confirm the issue is resolved
boxplot(formula = upward_mobility_rate_2010 ~ STATE_NAME_2010SVI, data = merged_data)

# new box plot to explore total population by state: 
boxplot(formula = M_TOTPOP_2010SVI ~ STATE_NAME_2010SVI, data = merged_data)

# what does this plot tell you? why did you choose this variable to explore next? are there patterns worth investigating? 
# the upward mobility is how likely are people economically likely to move up in class, is it even an option
# Boxplot uses the formula syntax: y ~ group, The left of the ~ is plotted on the y-axis, 
# The right is the grouping variable on the x-axis.

# 3.1 Case Sensitivity in R
#   objects with different cases will be referenced differently, capitalization is important

# 3.2 installing and loading tidyverse
install.packages("tidyverse")
library(tidyverse)

# 3.3 using tidyverse for summarizing data
#   create two new datasets by filtering the rows based on the state abbreviation
subset_data_ca <- subset(merged_data, STATE_ABBR_2010SVI == "CA")
subset_data_az <- subset(merged_data, STATE_ABBR_2010SVI == "AZ")

#   calculate the average upwad mobility rate in 2010 for each state using the mean () function
#   california
print(upward_mean_2010_ca <- mean(subset_data_ca$upward_mobility_rate_2010))
#   arizona
print(upward_mean_2010_az <- mean(subset_data_az$upward_mobility_rate_2010))

# store them in a new data frame so they're easier to use
upward_mobility_means_2010 <- data.frame(State = c("CA", "AZ"), up_2010_mean = c(upward_mean_2010_ca, upward_mean_2010_az))

# lets use tidyverse to do it so its faster

# tidyverse method (Concise and Scalable)
# group the full dataset by state abbreviation, then calculate the mean upward mobility rate for each group
state_group <- merged_data %>%
  group_by(STATE_ABBR_2010SVI)
state_mob_means <- state_group %>%
  summarise(up_mean = mean(upward_mobility_rate_2010, na.rm = TRUE))

# we have missing values we don't want, let's remove those rows where state abbreviations are missing
state_mob_means <- state_mob_means %>%
  filter(!is.na(STATE_ABBR_2010SVI))

# 3.4 The Pipe Operator %>%
#   start with full dataset (merged_data), group it by state, calculate mean upward mobility rate
upward <- merged_data %>%
  group_by(STATE_ABBR_2010SVI) %>%
  summarise(means_2010 = mean(upward_mobility_rate_2010, na.rm = TRUE))
#   remove rows where state is NA
upward <- upward %>% filter(!is.na(STATE_ABBR_2010SVI))


# 3.5 Adding Error Bars with ggplot2
upward_stats <- merged_data %>%
  group_by(STATE_ABBR_2010SVI, COUNTY_2010SVI) %>%
  summarise(up_means = mean(upward_mobility_rate_2010, na.rm = TRUE),
            up_se = sd(upward_mobility_rate_2010, na.rm = TRUE)/sqrt(n()))
#   we calculate: mean of upward mobility, standard error which tells us how spread out the data is.
#       It's calculated by taking the standard deviation divided by the square root of the sample size, gives
#       us a more precise picture of variation across counties within each state

#   drop the NA
upward_stats <- upward_stats %>% filter(!is.na(STATE_ABBR_2010SVI))

# plot mean upward mobility per state using ggplot2
ggplot(data = upward_stats, mapping = aes(x = STATE_ABBR_2010SVI, y = up_means))
# add our component using the + sign
ggplot(data = upward_stats, mapping = aes(x = STATE_ABBR_2010SVI, y = up_means)) +
  geom_point()
# add error bars using geom_errorbar().
ggplot(data = upward_stats, mapping = aes(x = STATE_ABBR_2010SVI, y = up_means)) +
  geom_point() + 
  geom_errorbar(mapping = aes(ymin = up_means - up_se,
                              ymax = up_means + up_se))
# make them skiniiii
ggplot(data = upward_stats, mapping = aes(x = STATE_ABBR_2010SVI, y = up_means)) +
  geom_point() + 
  geom_errorbar(mapping = aes(ymin = up_means - up_se,
                              ymax = up_means + up_se), 
                width = 0.30)
# clean up by state
upward_stats_st <- merged_data %>%
  group_by(STATE_ABBR_2010SVI) %>%
  summarize(up_means = mean(upward_mobility_rate_2010),
            up_se = sd(upward_mobility_rate_2010)/sqrt(n()))
# drop the NA
upward_stats_st <- upward_stats_st %>% filter(!is.na(STATE_ABBR_2010SVI))

# redo the graph
ggplot(data = upward_stats_st, mapping = aes(x = STATE_ABBR_2010SVI, y = up_means)) +
  geom_point() + 
  geom_errorbar(mapping = aes(ymin = up_means - up_se,
                              ymax = up_means + up_se), 
                width = 0.30)

# 3.6 more tidyverse tricks
merged <- merged_data
#   selecting columns
merged %>% 
  dplyr:: select(!contains("_"), starts_with ("upward"))
#   reordering columns
merged <- merged %>%
  dplyr:: relocate(contains("STATE"), .after = upward_mobility_rate_2020)
# create and place a unique identifier
unique_id <- merged %>%
  dplyr:: group_by(STATE_FIPS_2010SVI, COUNTY_2010SVI, CENSUSAREA_2010SVI) %>%
  dplyr:: mutate(uniqueid = row_number(), .before = contains("_"))
# pivoting (wide to long doesn't apply to our data yet)

# summarize across multiple columns
merged_stats_up <- merged %>% 
  dplyr::group_by(STATE_ABBR_2010SVI) %>% 
  dplyr::summarize(across(starts_with("upward"),
                          list(~mean(.x, na.rm = TRUE), 
                               ~sd(.x, na.rm = TRUE)))) 
# rename columns when summarizing
merged_stats_up <- merged %>% 
  dplyr::group_by(STATE_ABBR_2010SVI) %>% 
  dplyr::summarize(across(starts_with("upward"), 
                          list(mean = ~mean(.x, na.rm = TRUE), 
                               sd = ~sd(.x, na.rm = TRUE)),
                          .names = "{gsub('_', '', col)}_{fn}"))

# 3.7 Advanced: modeling and nesting
merged <- nest_by(state_group)

# 4 Running a basic statistical test: student's t-test
# start fresh
merged <- merged_data
#   add data we will be t-testing
az <- merged_data[merged_data$STATE_NAME_2010SVI == "Arizona", ]
ca <- merged_data[merged_data$STATE_NAME_2010SVI == "California", ]
# see how many rows and columns
dim(merged_data)
# return all columns for the third row in merged data:
merged_data[3,]
# or the third column
merged_data[,3]

#   check observations
print(nrow(az))
print(nrow(ca))
# california has a higher number of counties so it has many more observations

#   test the upward mobility rate in these two states significantly different?
t.test(x = az$upward_mobility_rate_2010, y = ca$upward_mobility_rate_2010)

# ANOVA: Multiple group comparisons, comparing the means between groups
#   to see if there is a statistically significant difference
aov(formula = upward_mobility_rate_2010 ~ COUNTY_2010SVI, data = az)
#   comparing mobility rate between counties
mobility_rate_az_aov <- aov(formula = upward_mobility_rate_2010 ~ COUNTY_2010SVI, data = az)
#   is the mobility rate explained by the county you're in
summary(object = mobility_rate_az_aov)
# save output to a file using sink
sink(file = "output/az_mobility_anova.txt")
summary(object = mobility_rate_az_aov)
sink()

# linear regression
#     tells us; is there a pattern, how strong is the pattern, can we use it to predict things?
summary(merged_data[, 1:10], 6)
#     visualize it
plot(x = merged_data$upward_mobility_rate_2010, y = merged_data$M_TOTPOP_2010SVI)
#     looking at the pattern between population and mobility, we need to make a straight line linear relationship
#   apply log transformation to population values, fixes data that's skewed or stretched out, squish down big numbers, makes data behave more "normal"

#   log-transformed data 
merged$logpop <-log10(merged$M_TOTPOP_2010SVI)
#   plot again
plot(x = merged$upward_mobility_rate_2010, 
     y = merged$logpop, 
     xlab = "Upward Mobility", 
     ylab = "log10(Population)")

# run linear model: 
mobility_v_pop <- lm(upward_mobility_rate_2010 ~ logpop, data = merged)
# let's look at the results:
summary(mobility_v_pop)
# save it with sink
sink(file = "output/mobility-pop-regression.txt")
summary(mobility_v_pop)
sink()


# Multivarite Regression: Let's add state
merged$az <- ifelse(merged$STATE_NAME_2010SVI == "Arizona", 1, 0)
merged$ca <- ifelse(merged$STATE_NAME_2010SVI == "California", 1, 0)
#   add AZ as a predictor and run the new model
mobility_v_pop_state <- lm(formula = upward_mobility_rate_2010 ~ logpop + az, data = merged)
summary(mobility_v_pop_state)
# save it
sink(file = "output/mobility-pop-state-regression.txt")
summary(mobility_v_pop)
sink()


# Student Activities
# 1. Variable exploration
boxplot(formula = upward_mobility_rate_2010 ~ STATE_NAME_2010SVI, data = merged_data)
#     this graph shows the variability potential in CA and AZ for how likely they are to be
#     upwardly mobile (financially likely to advance in class)
# 2. Anova analysis for CA
aov(formula = upward_mobility_rate_2010 ~ COUNTY_2010SVI, data = ca)
#     residual standard error: 1.045653, predictions by this model are usually off about this much
# 3. Another regression mobility from 2020
mobility_v_pop_state <- lm(formula = upward_mobility_rate_2020 ~ logpop + az + E_POV_2018SVI, data = merged)
summary(mobility_v_pop_state)
 

# reflect and extend
# I feel like I need more practice.